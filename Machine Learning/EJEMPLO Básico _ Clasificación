{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMb4jXvHsnt4svwoATDc/rC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Importar librerías"],"metadata":{"id":"DmX00sYorMwU"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"hN3VxejqnQYd"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import confusion_matrix, classification_report, accuracy_score\n","\n","from sklearn.preprocessing import LabelEncoder, MinMaxScaler\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.ensemble import RandomForestClassifier\n","\n","from sklearn.utils import resample"]},{"cell_type":"markdown","source":["# Recolectar datos"],"metadata":{"id":"GqZp3pumrWIt"}},{"cell_type":"code","source":["!gdown https://drive.google.com/u/0/uc?id=17btIMVHpynGecrxY3YAxHFfB0Rc3M6Ep&export=download"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TJqdZYH-rYcG","executionInfo":{"status":"ok","timestamp":1674599299510,"user_tz":240,"elapsed":2980,"user":{"displayName":"Carlos Bienvenido Ogando Montás (Carlitos5336)","userId":"10505299496410393010"}},"outputId":"0be77482-4591-402b-e193-0694336fed70"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading...\n","From: https://drive.google.com/u/0/uc?id=17btIMVHpynGecrxY3YAxHFfB0Rc3M6Ep\n","To: /content/pokemon.csv\n","\r  0% 0.00/44.0k [00:00<?, ?B/s]\r100% 44.0k/44.0k [00:00<00:00, 28.0MB/s]\n"]}]},{"cell_type":"code","source":["df = pd.read_csv(\"pokemon.csv\")"],"metadata":{"id":"QtW5v72KruoM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":574},"id":"7LsoLGFs5jF-","executionInfo":{"status":"ok","timestamp":1674599350407,"user_tz":240,"elapsed":5,"user":{"displayName":"Carlos Bienvenido Ogando Montás (Carlitos5336)","userId":"10505299496410393010"}},"outputId":"fb49b38d-37bb-437e-b9fd-1be068ea1bea"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       #                   Name   Type 1  Type 2  Total  HP  Attack  Defense  \\\n","0      1              Bulbasaur    Grass  Poison    318  45      49       49   \n","1      2                Ivysaur    Grass  Poison    405  60      62       63   \n","2      3               Venusaur    Grass  Poison    525  80      82       83   \n","3      3  VenusaurMega Venusaur    Grass  Poison    625  80     100      123   \n","4      4             Charmander     Fire     NaN    309  39      52       43   \n","..   ...                    ...      ...     ...    ...  ..     ...      ...   \n","795  719                Diancie     Rock   Fairy    600  50     100      150   \n","796  719    DiancieMega Diancie     Rock   Fairy    700  50     160      110   \n","797  720    HoopaHoopa Confined  Psychic   Ghost    600  80     110       60   \n","798  720     HoopaHoopa Unbound  Psychic    Dark    680  80     160       60   \n","799  721              Volcanion     Fire   Water    600  80     110      120   \n","\n","     Sp. Atk  Sp. Def  Speed  Generation  Legendary  \n","0         65       65     45           1      False  \n","1         80       80     60           1      False  \n","2        100      100     80           1      False  \n","3        122      120     80           1      False  \n","4         60       50     65           1      False  \n","..       ...      ...    ...         ...        ...  \n","795      100      150     50           6       True  \n","796      160      110    110           6       True  \n","797      150      130     70           6       True  \n","798      170      130     80           6       True  \n","799      130       90     70           6       True  \n","\n","[800 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-62b2a351-f83c-4f70-aff2-bf4f0b3f3e11\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>#</th>\n","      <th>Name</th>\n","      <th>Type 1</th>\n","      <th>Type 2</th>\n","      <th>Total</th>\n","      <th>HP</th>\n","      <th>Attack</th>\n","      <th>Defense</th>\n","      <th>Sp. Atk</th>\n","      <th>Sp. Def</th>\n","      <th>Speed</th>\n","      <th>Generation</th>\n","      <th>Legendary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Bulbasaur</td>\n","      <td>Grass</td>\n","      <td>Poison</td>\n","      <td>318</td>\n","      <td>45</td>\n","      <td>49</td>\n","      <td>49</td>\n","      <td>65</td>\n","      <td>65</td>\n","      <td>45</td>\n","      <td>1</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Ivysaur</td>\n","      <td>Grass</td>\n","      <td>Poison</td>\n","      <td>405</td>\n","      <td>60</td>\n","      <td>62</td>\n","      <td>63</td>\n","      <td>80</td>\n","      <td>80</td>\n","      <td>60</td>\n","      <td>1</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Venusaur</td>\n","      <td>Grass</td>\n","      <td>Poison</td>\n","      <td>525</td>\n","      <td>80</td>\n","      <td>82</td>\n","      <td>83</td>\n","      <td>100</td>\n","      <td>100</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>VenusaurMega Venusaur</td>\n","      <td>Grass</td>\n","      <td>Poison</td>\n","      <td>625</td>\n","      <td>80</td>\n","      <td>100</td>\n","      <td>123</td>\n","      <td>122</td>\n","      <td>120</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Charmander</td>\n","      <td>Fire</td>\n","      <td>NaN</td>\n","      <td>309</td>\n","      <td>39</td>\n","      <td>52</td>\n","      <td>43</td>\n","      <td>60</td>\n","      <td>50</td>\n","      <td>65</td>\n","      <td>1</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>795</th>\n","      <td>719</td>\n","      <td>Diancie</td>\n","      <td>Rock</td>\n","      <td>Fairy</td>\n","      <td>600</td>\n","      <td>50</td>\n","      <td>100</td>\n","      <td>150</td>\n","      <td>100</td>\n","      <td>150</td>\n","      <td>50</td>\n","      <td>6</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>796</th>\n","      <td>719</td>\n","      <td>DiancieMega Diancie</td>\n","      <td>Rock</td>\n","      <td>Fairy</td>\n","      <td>700</td>\n","      <td>50</td>\n","      <td>160</td>\n","      <td>110</td>\n","      <td>160</td>\n","      <td>110</td>\n","      <td>110</td>\n","      <td>6</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>797</th>\n","      <td>720</td>\n","      <td>HoopaHoopa Confined</td>\n","      <td>Psychic</td>\n","      <td>Ghost</td>\n","      <td>600</td>\n","      <td>80</td>\n","      <td>110</td>\n","      <td>60</td>\n","      <td>150</td>\n","      <td>130</td>\n","      <td>70</td>\n","      <td>6</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>798</th>\n","      <td>720</td>\n","      <td>HoopaHoopa Unbound</td>\n","      <td>Psychic</td>\n","      <td>Dark</td>\n","      <td>680</td>\n","      <td>80</td>\n","      <td>160</td>\n","      <td>60</td>\n","      <td>170</td>\n","      <td>130</td>\n","      <td>80</td>\n","      <td>6</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>799</th>\n","      <td>721</td>\n","      <td>Volcanion</td>\n","      <td>Fire</td>\n","      <td>Water</td>\n","      <td>600</td>\n","      <td>80</td>\n","      <td>110</td>\n","      <td>120</td>\n","      <td>130</td>\n","      <td>90</td>\n","      <td>70</td>\n","      <td>6</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>800 rows × 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-62b2a351-f83c-4f70-aff2-bf4f0b3f3e11')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-62b2a351-f83c-4f70-aff2-bf4f0b3f3e11 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-62b2a351-f83c-4f70-aff2-bf4f0b3f3e11');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df[\"Legendary\"].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8FD2rQwEvscq","executionInfo":{"status":"ok","timestamp":1656509390563,"user_tz":240,"elapsed":189,"user":{"displayName":"Carlos Bienvenido Ogando Montás","userId":"10505299496410393010"}},"outputId":"b1968626-d011-4600-86de-f0e8efd50306"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False    735\n","True      65\n","Name: Legendary, dtype: int64"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["# Preprocesar datos"],"metadata":{"id":"f0q75CWsuw-o"}},{"cell_type":"markdown","source":["##Limpieza de los datos"],"metadata":{"id":"gZLO96vPvUJ3"}},{"cell_type":"code","source":["df[\"Type 2\"] = df[\"Type 2\"].fillna(\"None\")"],"metadata":{"id":"oSATbytRvAZ7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Ingeniería de características"],"metadata":{"id":"TJnY9O3WvOTu"}},{"cell_type":"code","source":["df[\"Generation\"].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vqebDk3b6pU7","executionInfo":{"status":"ok","timestamp":1656509127221,"user_tz":240,"elapsed":7,"user":{"displayName":"Carlos Bienvenido Ogando Montás","userId":"10505299496410393010"}},"outputId":"482c97c6-7aa6-4247-e98d-57a372bad7f5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1    166\n","5    165\n","3    160\n","4    121\n","2    106\n","6     82\n","Name: Generation, dtype: int64"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["sections = []\n","for category in df[\"Generation\"].unique():\n","  sections.append(resample(df[df['Generation'] == category], replace=False, random_state=2, n_samples=82))\n","\n","df = pd.concat(sections)"],"metadata":{"id":"ELGQnfNN6-G2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = df[['Type 1', 'Type 2', 'HP', 'Attack', 'Defense',\n","       'Sp. Atk', 'Sp. Def', 'Speed', 'Legendary', 'Generation']]"],"metadata":{"id":"3rovWMdHv744","executionInfo":{"status":"ok","timestamp":1674607022939,"user_tz":240,"elapsed":149,"user":{"displayName":"Carlos Bienvenido Ogando Montás (Carlitos5336)","userId":"10505299496410393010"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"Q7d8XiUlvC1b","executionInfo":{"status":"ok","timestamp":1656509127222,"user_tz":240,"elapsed":6,"user":{"displayName":"Carlos Bienvenido Ogando Montás","userId":"10505299496410393010"}},"outputId":"416932bb-5bcd-485b-a42e-7bc88f0622eb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Type 1  Type 2   HP  Attack  Defense  Sp. Atk  Sp. Def  Speed  Legendary  \\\n","42     Fire    None   38      41       40       50       65     65      False   \n","23   Normal  Flying   83      80       80      135       80    121      False   \n","44   Normal   Fairy  115      45       20       45       25     20      False   \n","156     Ice  Flying   90      85      100       95      125     85       True   \n","13      Bug    None   45      30       35       20       20     45      False   \n","..      ...     ...  ...     ...      ...      ...      ...    ...        ...   \n","761  Poison  Dragon   65      75       90       97      123     44      False   \n","740   Grass    None   66      65       48       62       57     52      False   \n","790  Flying  Dragon   40      30       35       45       40     55      False   \n","733     Bug    None   45      22       60       27       30     29      False   \n","758    Rock   Water   42      52       67       39       56     50      False   \n","\n","     Generation  \n","42            1  \n","23            1  \n","44            1  \n","156           1  \n","13            1  \n","..          ...  \n","761           6  \n","740           6  \n","790           6  \n","733           6  \n","758           6  \n","\n","[492 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-f84902e3-eabe-4eff-9ef0-f836540ab8ea\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Type 1</th>\n","      <th>Type 2</th>\n","      <th>HP</th>\n","      <th>Attack</th>\n","      <th>Defense</th>\n","      <th>Sp. Atk</th>\n","      <th>Sp. Def</th>\n","      <th>Speed</th>\n","      <th>Legendary</th>\n","      <th>Generation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>42</th>\n","      <td>Fire</td>\n","      <td>None</td>\n","      <td>38</td>\n","      <td>41</td>\n","      <td>40</td>\n","      <td>50</td>\n","      <td>65</td>\n","      <td>65</td>\n","      <td>False</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Normal</td>\n","      <td>Flying</td>\n","      <td>83</td>\n","      <td>80</td>\n","      <td>80</td>\n","      <td>135</td>\n","      <td>80</td>\n","      <td>121</td>\n","      <td>False</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>Normal</td>\n","      <td>Fairy</td>\n","      <td>115</td>\n","      <td>45</td>\n","      <td>20</td>\n","      <td>45</td>\n","      <td>25</td>\n","      <td>20</td>\n","      <td>False</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>156</th>\n","      <td>Ice</td>\n","      <td>Flying</td>\n","      <td>90</td>\n","      <td>85</td>\n","      <td>100</td>\n","      <td>95</td>\n","      <td>125</td>\n","      <td>85</td>\n","      <td>True</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Bug</td>\n","      <td>None</td>\n","      <td>45</td>\n","      <td>30</td>\n","      <td>35</td>\n","      <td>20</td>\n","      <td>20</td>\n","      <td>45</td>\n","      <td>False</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>761</th>\n","      <td>Poison</td>\n","      <td>Dragon</td>\n","      <td>65</td>\n","      <td>75</td>\n","      <td>90</td>\n","      <td>97</td>\n","      <td>123</td>\n","      <td>44</td>\n","      <td>False</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>740</th>\n","      <td>Grass</td>\n","      <td>None</td>\n","      <td>66</td>\n","      <td>65</td>\n","      <td>48</td>\n","      <td>62</td>\n","      <td>57</td>\n","      <td>52</td>\n","      <td>False</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>790</th>\n","      <td>Flying</td>\n","      <td>Dragon</td>\n","      <td>40</td>\n","      <td>30</td>\n","      <td>35</td>\n","      <td>45</td>\n","      <td>40</td>\n","      <td>55</td>\n","      <td>False</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>733</th>\n","      <td>Bug</td>\n","      <td>None</td>\n","      <td>45</td>\n","      <td>22</td>\n","      <td>60</td>\n","      <td>27</td>\n","      <td>30</td>\n","      <td>29</td>\n","      <td>False</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>758</th>\n","      <td>Rock</td>\n","      <td>Water</td>\n","      <td>42</td>\n","      <td>52</td>\n","      <td>67</td>\n","      <td>39</td>\n","      <td>56</td>\n","      <td>50</td>\n","      <td>False</td>\n","      <td>6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>492 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f84902e3-eabe-4eff-9ef0-f836540ab8ea')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f84902e3-eabe-4eff-9ef0-f836540ab8ea button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f84902e3-eabe-4eff-9ef0-f836540ab8ea');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["## Codificación"],"metadata":{"id":"PxeokbSZvH89"}},{"cell_type":"code","source":["x = df.iloc[:, :-1]\n","y = df.iloc[:, -1]"],"metadata":{"id":"EO48vwqy75oQ","executionInfo":{"status":"ok","timestamp":1674608018577,"user_tz":240,"elapsed":156,"user":{"displayName":"Carlos Bienvenido Ogando Montás (Carlitos5336)","userId":"10505299496410393010"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["numerical_columns = list(x.columns[(x.dtypes == \"float64\") | (x.dtypes == \"int64\")])\n","categorical_columns = list(x.columns[(x.dtypes == \"object\") | (x.dtypes == \"bool\")])\n","all_columns = x.columns"],"metadata":{"id":"yxrXNh2d71HX","executionInfo":{"status":"ok","timestamp":1674608019093,"user_tz":240,"elapsed":12,"user":{"displayName":"Carlos Bienvenido Ogando Montás (Carlitos5336)","userId":"10505299496410393010"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["# Codificación cruda\n","\n","#raw_encodings = {}\n","\n","#for col in categorical_columns:\n","  #dict_ = {val: i for i, val in enumerate(list(x[col].unique()))}\n","  #raw_encodings[col] = dict_\n","  #x[col] = x[col].map(dict_)\n"],"metadata":{"id":"RCMNhzyFpldX","executionInfo":{"status":"ok","timestamp":1674607048872,"user_tz":240,"elapsed":148,"user":{"displayName":"Carlos Bienvenido Ogando Montás (Carlitos5336)","userId":"10505299496410393010"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# Codificación con scikit-learn\n","\n","encodings = {col: LabelEncoder() for col in categorical_columns}\n","\n","for col in categorical_columns:\n","  x[col] = encodings[col].fit_transform(x[col])\n"],"metadata":{"id":"AUNBEUyix8yD","executionInfo":{"status":"ok","timestamp":1674607593953,"user_tz":240,"elapsed":214,"user":{"displayName":"Carlos Bienvenido Ogando Montás (Carlitos5336)","userId":"10505299496410393010"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["plt.xticks(rotation=90)\n","sns.lineplot(data=df, x=\"Type 1\", y=\"Speed\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":326},"id":"EFmeUGB6yoIZ","executionInfo":{"status":"ok","timestamp":1674608032415,"user_tz":240,"elapsed":1521,"user":{"displayName":"Carlos Bienvenido Ogando Montás (Carlitos5336)","userId":"10505299496410393010"}},"outputId":"940c1de0-aeac-4c5a-a4d9-d12ea1c9f0b0"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f00591ff310>"]},"metadata":{},"execution_count":44},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["minmaxsc = MinMaxScaler()\n","x = minmaxsc.fit_transform(x)"],"metadata":{"id":"Ervf19r5-b3g"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Entrenamiento + Evaluación"],"metadata":{"id":"0C2D_5F6-SoP"}},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(x, y, random_state=2, test_size=0.2)"],"metadata":{"id":"OThvMG_i7C3D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["knn_clf = KNeighborsClassifier(n_neighbors=7)\n","knn_clf.fit(X_train, y_train)\n","\n","y_pred = knn_clf.predict(X_test)\n","\n","print(classification_report(y_test, y_pred))\n","print(confusion_matrix(y_test, y_pred))\n","print(accuracy_score(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qOo9mwrbAx-Q","executionInfo":{"status":"ok","timestamp":1656509128139,"user_tz":240,"elapsed":4,"user":{"displayName":"Carlos Bienvenido Ogando Montás","userId":"10505299496410393010"}},"outputId":"81658de8-69c9-45bc-d5ea-cdfddf20e353"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           1       0.10      0.18      0.13        17\n","           2       0.06      0.08      0.07        13\n","           3       0.38      0.29      0.32        21\n","           4       0.00      0.00      0.00        17\n","           5       0.33      0.31      0.32        13\n","           6       0.44      0.39      0.41        18\n","\n","    accuracy                           0.21        99\n","   macro avg       0.22      0.21      0.21        99\n","weighted avg       0.23      0.21      0.22        99\n","\n","[[3 5 2 3 2 2]\n"," [5 1 3 1 1 2]\n"," [6 3 6 3 2 1]\n"," [7 3 2 0 2 3]\n"," [4 2 2 0 4 1]\n"," [4 3 1 2 1 7]]\n","0.21212121212121213\n"]}]},{"cell_type":"code","source":["rfc_clf = RandomForestClassifier()\n","rfc_clf.fit(X_train, y_train)\n","\n","y_pred = rfc_clf.predict(X_test)\n","\n","print(classification_report(y_test, y_pred))\n","print(confusion_matrix(y_test, y_pred))\n","print(accuracy_score(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bujLEh1oHPXi","executionInfo":{"status":"ok","timestamp":1656509128433,"user_tz":240,"elapsed":12,"user":{"displayName":"Carlos Bienvenido Ogando Montás","userId":"10505299496410393010"}},"outputId":"30a0099b-50a2-4817-8d63-f7ae592f51ca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           1       0.35      0.35      0.35        17\n","           2       0.16      0.23      0.19        13\n","           3       0.28      0.24      0.26        21\n","           4       0.25      0.18      0.21        17\n","           5       0.20      0.23      0.21        13\n","           6       0.33      0.33      0.33        18\n","\n","    accuracy                           0.26        99\n","   macro avg       0.26      0.26      0.26        99\n","weighted avg       0.27      0.26      0.26        99\n","\n","[[6 3 4 1 3 0]\n"," [1 3 1 1 2 5]\n"," [2 4 5 2 6 2]\n"," [4 3 4 3 0 3]\n"," [1 3 1 3 3 2]\n"," [3 3 3 2 1 6]]\n","0.26262626262626265\n"]}]},{"cell_type":"code","source":["gnb_clf = GaussianNB()\n","gnb_clf.fit(X_train, y_train)\n","\n","y_pred = gnb_clf.predict(X_test)\n","\n","print(classification_report(y_test, y_pred))\n","print(confusion_matrix(y_test, y_pred))\n","print(accuracy_score(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5u1VC_JHHwKo","executionInfo":{"status":"ok","timestamp":1656509128433,"user_tz":240,"elapsed":11,"user":{"displayName":"Carlos Bienvenido Ogando Montás","userId":"10505299496410393010"}},"outputId":"e11847fe-31df-4192-fb8f-74bfc30e903c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           1       0.28      0.65      0.39        17\n","           2       0.25      0.23      0.24        13\n","           3       0.09      0.05      0.06        21\n","           4       0.00      0.00      0.00        17\n","           5       0.19      0.23      0.21        13\n","           6       0.13      0.11      0.12        18\n","\n","    accuracy                           0.20        99\n","   macro avg       0.16      0.21      0.17        99\n","weighted avg       0.15      0.20      0.16        99\n","\n","[[11  2  1  0  3  0]\n"," [ 3  3  1  0  3  3]\n"," [ 8  2  1  2  4  4]\n"," [ 7  1  3  0  2  4]\n"," [ 5  2  1  0  3  2]\n"," [ 5  2  4  4  1  2]]\n","0.20202020202020202\n"]}]},{"cell_type":"markdown","source":["#Predicciones"],"metadata":{"id":"RRtaLkqd_xy1"}},{"cell_type":"code","source":["new_pokemons = pd.DataFrame([\n","                             [\n","                              \"Rock\",\t\"Fairy\",\t60,\t110,\t140,\t90,\t120,\t50,\tTrue\n","                             ],\n","                             [\n","                              \"Water\", \"None\",\t45,\t45,\t45,\t50,\t60,\t55,\tFalse\n","                             ],\n","                             [\n","                              \"Dragon\",\t\"Flying\",\t105,\t140,\t80,\t160,\t100,\t95,\tTrue\n","                             ],\n","                             [\n","                              \"Dragon\",\t\"Psychic\",\t80,\t90,\t80,\t130,\t110,\t110,\tFalse\n","                             ]\n","], columns=all_columns)"],"metadata":{"id":"INNDO5EUIVvs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["new_pokemons"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"OBiscZ4tMKwP","executionInfo":{"status":"ok","timestamp":1656509128662,"user_tz":240,"elapsed":7,"user":{"displayName":"Carlos Bienvenido Ogando Montás","userId":"10505299496410393010"}},"outputId":"1e6153eb-6b8f-43ce-9b5f-b990a00784aa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Type 1   Type 2   HP  Attack  Defense  Sp. Atk  Sp. Def  Speed  Legendary\n","0    Rock    Fairy   60     110      140       90      120     50       True\n","1   Water     None   45      45       45       50       60     55      False\n","2  Dragon   Flying  105     140       80      160      100     95       True\n","3  Dragon  Psychic   80      90       80      130      110    110      False"],"text/html":["\n","  <div id=\"df-c538adab-1bd0-4ac6-b8c0-3a917dc929ea\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Type 1</th>\n","      <th>Type 2</th>\n","      <th>HP</th>\n","      <th>Attack</th>\n","      <th>Defense</th>\n","      <th>Sp. Atk</th>\n","      <th>Sp. Def</th>\n","      <th>Speed</th>\n","      <th>Legendary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Rock</td>\n","      <td>Fairy</td>\n","      <td>60</td>\n","      <td>110</td>\n","      <td>140</td>\n","      <td>90</td>\n","      <td>120</td>\n","      <td>50</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Water</td>\n","      <td>None</td>\n","      <td>45</td>\n","      <td>45</td>\n","      <td>45</td>\n","      <td>50</td>\n","      <td>60</td>\n","      <td>55</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Dragon</td>\n","      <td>Flying</td>\n","      <td>105</td>\n","      <td>140</td>\n","      <td>80</td>\n","      <td>160</td>\n","      <td>100</td>\n","      <td>95</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dragon</td>\n","      <td>Psychic</td>\n","      <td>80</td>\n","      <td>90</td>\n","      <td>80</td>\n","      <td>130</td>\n","      <td>110</td>\n","      <td>110</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c538adab-1bd0-4ac6-b8c0-3a917dc929ea')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c538adab-1bd0-4ac6-b8c0-3a917dc929ea button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c538adab-1bd0-4ac6-b8c0-3a917dc929ea');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["for feature, encoding in encodings.items():\n","  dict_ = {val: idx for idx, val in enumerate(encoding.classes_)}\n","  new_pokemons[feature] = new_pokemons[feature].apply(lambda x: dict_.get(x))"],"metadata":{"id":"5pNq_jntLVyf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["new_pokemons = minmaxsc.fit_transform(new_pokemons)"],"metadata":{"id":"2DDXg3-sMulR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(knn_clf.predict(new_pokemons))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Sdz6Y2SQNDNH","executionInfo":{"status":"ok","timestamp":1656509128662,"user_tz":240,"elapsed":5,"user":{"displayName":"Carlos Bienvenido Ogando Montás","userId":"10505299496410393010"}},"outputId":"3771ac3e-bbca-4a8b-afa2-9cecaa37ebd4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[3 3 5 1]\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"wKFkDdFHMmgR"}}]}